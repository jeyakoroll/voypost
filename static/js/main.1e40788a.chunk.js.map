{"version":3,"sources":["components/InputSearch.jsx","components/Trip.jsx","api/index.js","utils/selectors.js","ListOfTrips.jsx","App.js","serviceWorker.js","index.js"],"names":["Search","Input","InputSearch","_ref","setInputValue","react_default","a","createElement","className","placeholder","onChange","_ref2","value","target","style","width","Trip","_ref$trip","trip","fromName","toName","date","vehicle","api","departAt","getTrips","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","abrupt","Promise","resolve","reject","Trips","stop","apply","this","arguments","ListOfTrips","state","_this","setState","trips","props","filteredTrips","filter","key","idx","searchableIdx","Set","lowerValue","toLowerCase","forEach","length","undefined","indexOf","add","has","id","filterByInputValue","components_InputSearch","map","components_Trip","React","PureComponent","App","_this2","then","tripsWithId","reduce","generatedTrips","dateOfTrip","Date","toLocaleString","eachTrip","push","formattedData","Fragment","href","rel","aria-label","height","viewBox","fill","color","position","top","border","right","aria-hidden","d","transformOrigin","src_ListOfTrips","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1e40788a.chunk.js","sourcesContent":["import React from 'react'\nimport { Input } from 'antd';\n\nconst Search = Input.Search;\n\nconst InputSearch = ({ setInputValue }) => (\n <Search\n    className=\"input-search\"\n    placeholder=\"input search text\"\n    onChange = { ({target: { value }}) => setInputValue(value) }\n    style={{ width: 200 }}\n  />\n)\n\nexport default InputSearch;","import React from 'react'\n\nconst Trip = ({ trip: { fromName, toName, date, vehicle } }) => (\n  <div className=\"list-item\">\n    <h3 className=\"list-item_from\">{ fromName }</h3>\n    <h4 className=\"list-item_to\">{ toName }</h4>\n    <p className=\"list-item_date\">{ date }</p>\n    <p className=\"list-item_how\">{ vehicle }</p>\n  </div>\n)\n\nexport default Trip;","export default [\n  {\n    \"fromName\": \"Berlin, Germany\",\n    \"toName\": \"Kyiv, Ukraine\",\n    \"departAt\": \"2019-05-29T00:00:00.000Z\",\n    \"vehicle\": \"plane\"\n  },\n  {\n    \"fromName\": \"Berlin, Germany\",\n    \"toName\": \"Dnipro, Ukraine\",\n    \"departAt\": \"2019-06-02T00:00:00.000Z\",\n    \"vehicle\": \"car\"\n  },\n  {\n    \"fromName\": \"London, UK\",\n    \"toName\": \"Kyiv, Ukraine\",\n    \"departAt\": \"2019-06-07T00:00:00.000Z\",\n    \"vehicle\": \"plane\"\n  },\n  {\n    \"fromName\": \"Lyon, France\",\n    \"toName\": \"Kyiv, Ukraine\",\n    \"departAt\": \"2019-06-07T00:00:00.000Z\",\n    \"vehicle\": \"plane\"\n  },\n  {\n    \"fromName\": \"Moscow, Russia\",\n    \"toName\": \"Kyiv, Ukraine\",\n    \"departAt\": \"2019-06-08T00:00:00.000Z\",\n    \"vehicle\": \"car\"\n  },\n  {\n    \"fromName\": \"Kyiv, Ukraine\",\n    \"toName\": \"Berlin, Germany\",\n    \"departAt\": \"2019-05-30T00:00:00.000Z\",\n    \"vehicle\": \"train\"\n  }\n]","import Trips from '../api'\n\n// Func for getting trips\nexport const getTrips = async () => new Promise((resolve, reject) => {\n  resolve(Trips)\n})\n\n// Formatted data\nexport const formattedData = trips => trips.reduce((generatedTrips, trip, key) => {\n  // Func for creating data for filtering\n  const createData = (fromName, toName, date, vehicle) => \n  ({ id: key, fromName, toName, date, vehicle });\n  \n  const dateOfTrip = new Date(trip.departAt).toLocaleString();\n  // Create data\n  const eachTrip = createData(trip.fromName, trip.toName, dateOfTrip, trip.vehicle );\n  generatedTrips.push(eachTrip); \n  return generatedTrips;\n}, []);\n\n// And filter our trips\nconst createInputSearchData = (fromName, toName) => ([fromName, toName]);\nexport const filterByInputValue = (trip, idx, value) => {\n  const searchableIdx = new Set(), lowerValue = value.toLowerCase();\n  const searchCandidate = createInputSearchData(trip['fromName'], trip['toName']);\n  searchCandidate.forEach((text = '') => text.toLowerCase().indexOf(lowerValue) > -1 ? searchableIdx.add(idx) : null);\n  return searchableIdx.has(trip.id);\n}\n\n","import React from 'react'\nimport InputSearch from './components/InputSearch' \nimport Trip from './components/Trip' \n\nimport { filterByInputValue } from './utils/selectors'\n\nclass ListOfTrips extends React.PureComponent {\n  state = { value: '' }\n\n  setInputValue = value => this.setState({ value })\n\n  render() {\n    const { trips } = this.props\n    const { value } = this.state\n    const filteredTrips = trips.filter((trip, key) => filterByInputValue(trip, key, value));\n    \n    return (\n      <div className=\"App\">\n        <InputSearch setInputValue = { this.setInputValue } />\n        <section className=\"trip-layout\">\n          {filteredTrips.map( (trip, key) => <Trip key = { key } trip = { trip } /> )}\n        </section>\n      </div>\n    )\n  }\n}\n\nexport default ListOfTrips;","import React, { PureComponent } from 'react';\nimport ListOfTrips from './ListOfTrips';\n\nimport './App.css';\nimport { getTrips, formattedData } from './utils/selectors'\n\nclass App extends PureComponent {\n  state = { trips: null }\n\n  componentDidMount() {\n    getTrips().then(trips => {\n      const tripsWithId = formattedData(trips);\n      this.setState({ trips: tripsWithId })\n    })\n  }\n\n  render() {\n    const { trips } = this.state\n\n    return (\n      <>\n        <a href=\"https://github.com/jeyakoroll/voypost/tree/master\" target=\"_blank\" rel = \"noopener noreferrer \"className=\"github-corner\" aria-label=\"View source on GitHub\"><svg width=\"80\" height=\"80\" viewBox=\"0 0 250 250\" style={{fill: \"#70B7FD\", color:\"#fff\", position: \"absolute\", top: 0, border: 0, right: 0}} aria-hidden=\"true\"><path d=\"M0,0 L115,115 L130,115 L142,142 L250,250 L250,0 Z\"></path><path d=\"M128.3,109.0 C113.8,99.7 119.0,89.6 119.0,89.6 C122.0,82.7 120.5,78.6 120.5,78.6 C119.2,72.0 123.4,76.3 123.4,76.3 C127.3,80.9 125.5,87.3 125.5,87.3 C122.9,97.6 130.6,101.9 134.4,103.2\" fill=\"currentColor\" style={{transformOrigin: \"130px 106px\"}} className=\"octo-arm\"></path><path d=\"M115.0,115.0 C114.9,115.1 118.7,116.5 119.8,115.4 L133.7,101.6 C136.9,99.2 139.9,98.4 142.2,98.6 C133.8,88.0 127.5,74.4 143.8,58.0 C148.5,53.4 154.0,51.2 159.7,51.0 C160.3,49.4 163.2,43.6 171.4,40.1 C171.4,40.1 176.1,42.5 178.8,56.2 C183.1,58.6 187.2,61.8 190.9,65.4 C194.5,69.0 197.7,73.2 200.1,77.6 C213.8,80.2 216.3,84.9 216.3,84.9 C212.7,93.1 206.9,96.0 205.4,96.6 C205.1,102.4 203.0,107.8 198.3,112.5 C181.9,128.9 168.3,122.5 157.7,114.1 C157.9,116.9 156.7,120.9 152.7,124.9 L141.0,136.5 C139.8,137.7 141.6,141.9 141.8,141.8 Z\" fill=\"currentColor\" className=\"octo-body\"></path></svg> </a>\n        {trips !== null && <ListOfTrips trips={trips} />}\n      </>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}